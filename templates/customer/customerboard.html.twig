{% extends 'base.html.twig' %}

{% block title %}Customerboard{% endblock %}

{% block body %}
  <style></style>

  <h1>Customer Board</h1>
  <img src="{{ asset('images/HVAC_logo.jpg') }}" alt="image logo HVAC"/>
  <div class="titreSite">
    <h4>Site:
      {{siteSelect.sitville}}</h4>
  </div>
  <div class="trancheSelection">
    <form action="" method="POST">
      <select class="form-select" id='postEquId' name='postEquId' onchange="this.form.submit()">
        <option name='choisir' value='null'>Choisir equipement</option>
        {% for equipement in equipements %}
          <option name='{{equipement.equnom}}' value='{{ equipement.id }}'>equ:
            {{ equipement.equmarque }}
            {{ equipement.equmodele }}
            {{ equipement.equserie }}</option>
        {% endfor %}
      </select>
    </form>
    <div>
      <h3>Equipement:
        {{DetailEquipement.equmarque}}
        {{DetailEquipement.equmodele}}
        {{DetailEquipement.equserie}}</h3>
      <div class="imageEquipement">
        <img src="{{ asset('images/'~DetailEquipement.equphoto1) }}" alt="photo equipement"/>
      </div>
      <div class="imageBlocGraphiques">
        {% for UnPtMesAvecCapteurEtMesure in lesPtMesAvecCapteurEtMesures %}
          <div class="blocUnPoint">
            <div>
              nom du point:{{UnPtMesAvecCapteurEtMesure[0].ptmesnom}}
              {{UnPtMesAvecCapteurEtMesure[0].ptmesposition}}
              capteur:
              {{UnPtMesAvecCapteurEtMesure[1].capmarque}}_:_{{UnPtMesAvecCapteurEtMesure[1].capserie}}
            </div>
            <div class="imageGraphique">
              <img src="{{ asset('images/graph_tempe.png') }}" alt="image graphique temperature"/>
              
            </div>
            {# <div>
              Toutes les mesures:
              {% for mesure in UnPtMesAvecCapteurEtMesure[2] %}
                {{mesure.mesvaleur1}}
                :
              {% endfor %}
            </div> #}
          </div>

        {% endfor %}
      </div>
      <canvas id="myChart" width="400" height="200"></canvas>

      {# <div id="data-element" data-texte="{{ equipements[0] | json_encode()}}"></div> #}
      {# <div id="data-element" data-texte="{{ DetailEquipement.equmarque}}"></div> #}
      <div id="data-element" data-texte="{{ lesPtMesAvecCapteurEtMesures[0][3] | json_encode()}}"></div>

      <script>
        document.addEventListener('DOMContentLoaded', function() {
            var elementData = document.querySelector('#data-element');
            var data = elementData.dataset.texte;
            //var data2 = JSON.parse(data);;
        //console.log("récupère data from twig" + data);
        console.log("data: " + data);
        //console.log("data 2: " + data2);
        });
       
      </script>
     
      
      {#  Création des tableaux pour Chart_JS
          Les tableaux ont été fabriqués dans le contrôleur
          Puis sont copiés dans des tableaux javaScript pour êtres untilisés dans chart_JS
      #}
      <script>
        let monTableauMesures = [];
        let monTableauDates = [];  
      </script>
      {% for mesure in lesPtMesAvecCapteurEtMesures[0][3] %}
        <script>
          monTableauMesures.push({{mesure}});
        </script>        
      {% endfor %}
      {% for date in lesPtMesAvecCapteurEtMesures[0][4] %}
        <script>
          monTableauDates.push("{{date}}");
        </script>
      {% endfor %}


    {# construction du graphique chart_js #}
      <script>
      buildGraph('myChart');
      function buildGraph(idCanvasGraph){

          //var ctx = document.getElementById('myChart').getContext('2d');
          var ctx = document.getElementById(idCanvasGraph).getContext('2d');
          var myChart = new Chart(ctx, {
              type: 'line',
              data: {
                  //labels: tableauLabels,
                  labels: monTableauDates,
                  datasets: [{
                      label: '# of Votes',
                      //data: tableauDatas,
                      data: monTableauMesures,
                      
                      borderWidth: 3
                  }]
              },
              options: {
                  scales: {
                      y: {
                          beginAtZero: true
                      }
                  }
              }
          });
      }
          
      </script>

    {% endblock %}
